import 'package:dio/dio.dart';
import 'package:get_it/get_it.dart';
import 'package:jetboard/src/core/network/dio_consumer.dart';
import 'package:jetboard/src/core/network/dio_factory.dart';
import 'package:jetboard/src/core/network/network_service.dart';
import 'package:jetboard/src/features/ads/cubit/ads_cubit.dart';
import 'package:jetboard/src/features/ads/data/repo/ads_repo.dart';
import 'package:jetboard/src/features/ads/service/ads_web_service.dart';
import 'package:jetboard/src/features/areas/cubit/areas_cubit.dart';
import 'package:jetboard/src/features/areas/data/repo/area_repo.dart';
import 'package:jetboard/src/features/areas/service/areas_web_service.dart';
import 'package:jetboard/src/features/auth/cubit/auth_cubit.dart';
import 'package:jetboard/src/features/auth/data/repo/auth_repo.dart';
import 'package:jetboard/src/features/auth/service/auth_web_service.dart';
import 'package:jetboard/src/features/calendar/cubit/calendar_cubit.dart';
import 'package:jetboard/src/features/calendar/data/repo/calendar_repo.dart';
import 'package:jetboard/src/features/calendar/service/calendar_web_service.dart';
import 'package:jetboard/src/features/categories/cubit/categories_cubit.dart';
import 'package:jetboard/src/features/categories/data/repo/categories_repo.dart';
import 'package:jetboard/src/features/categories/service/categories_web_service.dart';
import 'package:jetboard/src/features/clients/cubit/clients_cubit.dart';
import 'package:jetboard/src/features/clients/data/repo/clients_repo.dart';
import 'package:jetboard/src/features/clients/service/clients_web_service.dart';
import 'package:jetboard/src/features/corporate/cubit/corporate_cubit.dart';
import 'package:jetboard/src/features/corporate/data/repo/corporate_repo.dart';
import 'package:jetboard/src/features/corporate/service/corporate_web_service.dart';
import 'package:jetboard/src/features/crew/cubit/crew_cubit.dart';
import 'package:jetboard/src/features/crew/data/repo/crew_repo.dart';
import 'package:jetboard/src/features/crew/service/crew_web_service.dart';
import 'package:jetboard/src/features/equipment_schedule/cubit/equipment_schedule_cubit.dart';
import 'package:jetboard/src/features/equipment_schedule/data/repo/equipment_schedule_repo.dart';
import 'package:jetboard/src/features/equipment_schedule/service/equipment_schedule_web_service.dart';
import 'package:jetboard/src/features/equipments/cubit/equipment_cubit.dart';
import 'package:jetboard/src/features/equipments/data/repo/equipment_repo.dart';
import 'package:jetboard/src/features/equipments/service/equipment_web_service.dart';
import 'package:jetboard/src/features/home/cubit/home_cubit.dart';
import 'package:jetboard/src/features/home/data/repo/home_repo.dart';
import 'package:jetboard/src/features/home/service/home_web_service.dart';
import 'package:jetboard/src/features/info/cubit/info_cubit.dart';
import 'package:jetboard/src/features/info/data/repo/info_repo.dart';
import 'package:jetboard/src/features/info/service/info_web_service.dart';
import 'package:jetboard/src/features/items/cubit/items_cubit.dart';
import 'package:jetboard/src/features/items/data/repo/items_repo.dart';
import 'package:jetboard/src/features/items/service/items_web_service.dart';
import 'package:jetboard/src/features/layout/cubit/layout_cubit.dart';
import 'package:jetboard/src/features/moderators/cubit/moderators_cubit.dart';
import 'package:jetboard/src/features/moderators/data/repo/moderators_repo.dart';
import 'package:jetboard/src/features/moderators/service/moderators_web_service.dart';
import 'package:jetboard/src/features/notifications/cubit/notifications_cubit.dart';
import 'package:jetboard/src/features/notifications/data/repo/notification_repo.dart';
import 'package:jetboard/src/features/notifications/service/notifications_web_service.dart';
import 'package:jetboard/src/features/packages/cubit/packages_cubit.dart';
import 'package:jetboard/src/features/packages/data/repo/packages_repo.dart';
import 'package:jetboard/src/features/packages/service/packages_web_service.dart';
import 'package:jetboard/src/features/periods/cubit/period_cubit.dart';
import 'package:jetboard/src/features/periods/data/repo/period_repo.dart';
import 'package:jetboard/src/features/periods/service/period_web_service.dart';
import 'package:jetboard/src/features/splash/cubit/splash_cubit.dart';
import 'package:jetboard/src/features/states/cubit/states_cubit.dart';
import 'package:jetboard/src/features/states/data/repo/state_repo.dart';
import 'package:jetboard/src/features/states/service/states_web_service.dart';
import 'package:jetboard/src/features/support/cubit/support_cubit.dart';
import 'package:jetboard/src/features/support/data/repo/support_repo.dart';
import 'package:jetboard/src/features/support/service/support_web_service.dart';

final instance = GetIt.instance;

Future<void> initAppModule() async {
  // --------------------- Services
  instance.registerLazySingleton<DioFactory>(() => DioFactory());
  instance.registerLazySingleton<NetworkService>(() => DioConsumer(instance()));

  Dio dio = await instance<DioFactory>().getDio();

  instance.registerLazySingleton<Dio>(() => dio);

  // --------------------- Cubit
  instance.registerFactory<AdsCubit>(() => AdsCubit(instance()));
  instance.registerFactory<AuthCubit>(() => AuthCubit(instance()));
  instance.registerFactory<HomeCubit>(() => HomeCubit(instance()));
  instance.registerFactory<InfoCubit>(() => InfoCubit(instance()));
  instance.registerFactory<LayoutCubit>(() => LayoutCubit());
  instance.registerFactory<NotificationsCubit>(() => NotificationsCubit(instance()));
  instance.registerFactory<PeriodCubit>(() => PeriodCubit(instance()));
  instance.registerFactory<SplashCubit>(() => SplashCubit());
  instance.registerFactory<SupportCubit>(() => SupportCubit(instance()));
  instance.registerFactory<AreasCubit>(() => AreasCubit(instance()));
  instance.registerFactory<StatesCubit>(() => StatesCubit(instance()));
  instance.registerFactory<CalendarCubit>(() => CalendarCubit(instance()));
  instance.registerFactory<ModeratorsCubit>(() => ModeratorsCubit(instance()));
  instance.registerFactory<ClientsCubit>(() => ClientsCubit(instance()));
  instance.registerFactory<CrewCubit>(() => CrewCubit(instance()));
  instance.registerFactory<EquipmentCubit>(() => EquipmentCubit(instance()));
  instance.registerFactory<EquipmentScheduleCubit>(() => EquipmentScheduleCubit(instance()));
  instance.registerFactory<ItemsCubit>(() => ItemsCubit(instance()));
  instance.registerFactory<CorporateCubit>(() => CorporateCubit(instance()));
  instance.registerFactory<PackagesCubit>(() => PackagesCubit(instance()));
  instance.registerFactory<CategoriesCubit>(() => CategoriesCubit(instance()));

  // --------------------- Repo
  instance.registerLazySingleton<AdsRepo>(() => AdsRepo(instance()));
  instance.registerLazySingleton<AuthRepo>(() => AuthRepo(instance()));
  instance.registerLazySingleton<HomeRepo>(() => HomeRepo(instance()));
  instance.registerLazySingleton<InfoRepo>(() => InfoRepo(instance()));
  instance.registerLazySingleton<NotificationRepo>(() => NotificationRepo(instance()));
  instance.registerLazySingleton<PeriodRepo>(() => PeriodRepo(instance()));
  instance.registerLazySingleton<SupportRepo>(() => SupportRepo(instance()));
  instance.registerLazySingleton<AreaRepo>(() => AreaRepo(instance()));
  instance.registerLazySingleton<StateRepo>(() => StateRepo(instance()));
  instance.registerLazySingleton<CalendarRepo>(() => CalendarRepo(instance()));
  instance.registerLazySingleton<ModeratorsRepo>(() => ModeratorsRepo(instance()));
  instance.registerLazySingleton<ClientsRepo>(() => ClientsRepo(instance()));
  instance.registerLazySingleton<CrewRepo>(() => CrewRepo(instance()));
  instance.registerLazySingleton<EquipmentRepo>(() => EquipmentRepo(instance()));
  instance.registerLazySingleton<EquipmentScheduleRepo>(() => EquipmentScheduleRepo(instance()));
  instance.registerLazySingleton<ItemsRepo>(() => ItemsRepo(instance()));
  instance.registerLazySingleton<CorporateRepo>(() => CorporateRepo(instance()));
  instance.registerLazySingleton<PackagesRepo>(() => PackagesRepo(instance()));
  instance.registerLazySingleton<CategoriesRepo>(() => CategoriesRepo(instance()));

  // --------------------- Web Service
  instance.registerLazySingleton<AdsWebService>(() => AdsWebService(instance()));
  instance.registerLazySingleton<AuthWebService>(() => AuthWebService(instance()));
  instance.registerLazySingleton<HomeWebService>(() => HomeWebService(instance()));
  instance.registerLazySingleton<InfoWebService>(() => InfoWebService(instance()));
  instance.registerLazySingleton<NotificationsWebService>(() => NotificationsWebService(instance()));
  instance.registerLazySingleton<PeriodWebService>(() => PeriodWebService(instance()));
  instance.registerLazySingleton<SupportWebService>(() => SupportWebService(instance()));
  instance.registerLazySingleton<AreasWebService>(() => AreasWebService(instance()));
  instance.registerLazySingleton<StatesWebService>(() => StatesWebService(instance()));
  instance.registerLazySingleton<CalendarWebService>(() => CalendarWebService(instance()));
  instance.registerLazySingleton<ModeratorsWebService>(() => ModeratorsWebService(instance()));
  instance.registerLazySingleton<ClientsWebService>(() => ClientsWebService(instance()));
  instance.registerLazySingleton<CrewWebService>(() => CrewWebService(instance()));
  instance.registerLazySingleton<EquipmentWebService>(() => EquipmentWebService(instance()));
  instance.registerLazySingleton<EquipmentScheduleWebService>(() => EquipmentScheduleWebService(instance()));
  instance.registerLazySingleton<ItemsWebService>(() => ItemsWebService(instance()));
  instance.registerLazySingleton<CorporateWebService>(() => CorporateWebService(instance()));
  instance.registerLazySingleton<PackagesWebService>(() => PackagesWebService(instance()));
  instance.registerLazySingleton<CategoriesWebService>(() => CategoriesWebService(instance()));
}
